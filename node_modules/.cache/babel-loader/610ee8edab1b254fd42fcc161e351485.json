{"ast":null,"code":"var _jsxFileName = \"/home/gb/Bureau/soft-serverless-GabrielleWal/Netlify-App/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Center, Text, Input, Button } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Form, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mt: \"48px\",\n      fontWeight: \"bold\",\n      fontSize: \"32px\",\n      children: \"Serverless Gifs App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      onSubmit: () => {\n        console.log(value);\n      },\n      children: () => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search gifs\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"teal\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gb/Bureau/soft-serverless-GabrielleWal/Netlify-App/src/App.tsx"],"names":["Center","Text","Input","Button","useState","Form","Formik","App","value","setValue","console","log","e","target"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA2CC,MAA3C,QAAyD,kBAAzD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,UAAU,EAAC,MAA3B;AAAkC,MAAA,QAAQ,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AACI,MAAA,aAAa,EAAE,EADnB;AAEI,MAAA,QAAQ,EAAE,MAAM;AACZM,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,OAJL;AAAA,gBAMK,mBACG,QAAC,IAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC,aAAnB;AAAiC,UAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASL,KAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,WAAW,EAAC,MAA3B;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAzBD;;GAAMD,G;;KAAAA,G","sourcesContent":["import { Center, Text, Input, FormControl, Button } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Form, Formik } from 'formik';\n\nconst App = () => {\n    const [value, setValue] = useState('');\n\n    return (\n        <Center>\n            <Text mt=\"48px\" fontWeight=\"bold\" fontSize=\"32px\">\n                Serverless Gifs App\n            </Text>\n            <Formik\n                initialValues={{}}\n                onSubmit={() => {\n                    console.log(value);\n                }}\n            >\n                {() => (\n                    <Form>\n                        <Input placeholder=\"Search gifs\" onChange={(e) => setValue(e.target.value)} />\n                        <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </Center>\n    );\n};"]},"metadata":{},"sourceType":"module"}